// Code generated by goctl. DO NOT EDIT!
// Source: fileServer.proto

package fileserver

import (
	"context"

	"fileServer/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BaseRes      = pb.BaseRes
	FileMetaInfo = pb.FileMetaInfo
	FindFileReq  = pb.FindFileReq
	QueryFileReq = pb.QueryFileReq
	QueryFileRes = pb.QueryFileRes

	FileServer interface {
		FindOne(ctx context.Context, in *FindFileReq, opts ...grpc.CallOption) (*FileMetaInfo, error)
		QueryFiles(ctx context.Context, in *QueryFileReq, opts ...grpc.CallOption) (*QueryFileRes, error)
		InertOne(ctx context.Context, in *FileMetaInfo, opts ...grpc.CallOption) (*BaseRes, error)
		DeleteOne(ctx context.Context, in *FileMetaInfo, opts ...grpc.CallOption) (*BaseRes, error)
	}

	defaultFileServer struct {
		cli zrpc.Client
	}
)

func NewFileServer(cli zrpc.Client) FileServer {
	return &defaultFileServer{
		cli: cli,
	}
}

func (m *defaultFileServer) FindOne(ctx context.Context, in *FindFileReq, opts ...grpc.CallOption) (*FileMetaInfo, error) {
	client := pb.NewFileServerClient(m.cli.Conn())
	return client.FindOne(ctx, in, opts...)
}

func (m *defaultFileServer) QueryFiles(ctx context.Context, in *QueryFileReq, opts ...grpc.CallOption) (*QueryFileRes, error) {
	client := pb.NewFileServerClient(m.cli.Conn())
	return client.QueryFiles(ctx, in, opts...)
}

func (m *defaultFileServer) InertOne(ctx context.Context, in *FileMetaInfo, opts ...grpc.CallOption) (*BaseRes, error) {
	client := pb.NewFileServerClient(m.cli.Conn())
	return client.InertOne(ctx, in, opts...)
}

func (m *defaultFileServer) DeleteOne(ctx context.Context, in *FileMetaInfo, opts ...grpc.CallOption) (*BaseRes, error) {
	client := pb.NewFileServerClient(m.cli.Conn())
	return client.DeleteOne(ctx, in, opts...)
}

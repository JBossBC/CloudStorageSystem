// Code generated by goctl. DO NOT EDIT.
package types

type BaseResponse struct {
	result  string      `json:"result"`
	message string      `json:"message"`
	data    interface{} `json:"data"`
}
func NewDefaultRes()*BaseResponse{
	return &BaseResponse{
		result: "true",
		message: "操作成功",
	}
}
func (br *BaseResponse)AddData(data interface{}){
	br.data=data
}
func( br *BaseResponse) GetFailedRep(msg string){
	br.result= "fail"
	br.message=msg
}

type UploadReq struct {
	MetaInfo map[string]interface{} `json:"metaInfo"`
	Data     []byte                 `form:"fileData"`
}

type DownloadReq struct {
	MetaInfo map[string]interface{} `json:"metaInfo"` //must include the location key and the
}

type FindReq struct {
	MetaInfo map[string]interface{} `json:"metaInfo"` //must include the location key
}

type QueryReq struct {
	MetaInfo map[string]interface{} `json:"metaInfo"` //mush include the owner name
}

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose-env.yaml
    kompose.version: 1.28.0 (c4137012e)
  creationTimestamp: null
  labels:
    io.kompose.service: mysql
  name: mysql
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose-env.yaml
        kompose.version: 1.28.0 (c4137012e)
      creationTimestamp: null
      labels:
        io.kompose.network/cloudstorage-cloudstoragesystem: "true"
        io.kompose.service: mysql
    spec:
      containers:
        - args:
            - --default-authentication-plugin=mysql_native_password
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_general_ci
            - --explicit_defaults_for_timestamp=true
            - --lower_case_table_names=1
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            - name: TZ
              value: Asia/Shanghai
          image: mysql/mysql-server:8.0.28
          name: mysql
          ports:
            - containerPort: 3306
          resources: {}
          securityContext:
            privileged: true
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: mysql-claim0
            - mountPath: /var/lib/mysql
              name: mysql-claim1
      restartPolicy: Always
      volumes:
        - name: mysql-claim0
          persistentVolumeClaim:
            claimName: mysql-claim0
        - name: mysql-claim1
          persistentVolumeClaim:
            claimName: mysql-claim1
status: {}
